def solve():
  DP = [[float('inf')]*(N+1) for i in range(N+1)]
  DP[-1] = [0] * len(DP[-1])  # base case
  for i in range(N-1, 0, -1):
    r1 = queries[i-1][1]
    q0, q1 = queries[i]
    for j in range(-1,i):
      r2 = queries[j][1] if j >= 0 else q0
      DP[i][j] = min(abs(r1-q0) + DP[i+1][j], abs(r2-q0) + DP[i+1][i-1])\
                 + abs(q0-q1)
  return min(DP[1]) + abs(queries[0][0] - queries[0][1])

if __name__ == '__main__':
  for t in range(eval(input())):
    M, N = map(int, input().split())
    queries = [[int(x) for x in input().split()] for _ in range(N)]
    print(queries)
    print(solve())